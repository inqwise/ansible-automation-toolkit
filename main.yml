- name: "{{ playbook_name }}"
  hosts: all
  become: yes  # Use sudo to execute tasks
      
  vars_files:
    - defaults.yml

  tasks:
  - block:
  
    - name: install mc
      ansible.builtin.package:
        name:
          - 'mc'
        state: present
      tags: installation  

    - name: include main vars
      include_vars:
        dir: vars/main
        files_matching: "{{ private_domain }}.yml"

    - name: include credentials vars
      include_vars:
        dir: vars/credentials
        files_matching: "{{ private_domain }}.yml"

    - name: download access file from url
      get_url:
        url: "{{ access_file_url }}"
        dest: "{{ access_remote_base_path }}"
        mode: '0440'

    - name: include users and groups vars
      include_vars:
        file: access.yml
        name: access

    - name: add groups to access
      set_fact:
        access: >-
          {{
            access | combine({
              'users_groups': (access.users_groups | default([])) | union(users_groups)
            })
          }}
      when: users_groups is defined

    - name: add users to access
      set_fact:
        access: >-
          {{
            access | combine({
              'users': (access.users | default([])) | union(users)
            })
          }}
      when: users is defined

    - name: debuging users
      ansible.builtin.debug:
        var: users
        verbosity: 1
      tags: debug

    - include_role:
        name: users
      vars:
        users_groups: "{{ access.users_groups }}"
        users: "{{ access.users }}"

    - include_role:
        name: telegraf
      vars:
        telegraf_agent_hostname: "{{ ansible_fqdn }}"
        telegraf_agent_external_interval: True
      when: telegraf_config_uri is defined
      
    - name: stuff
      import_tasks: stuff.yml
        
    - name: send success message
      include_role:
        name: discord
      
    rescue:
      - name: send fail message
        include_role:
          name: discord
      
      - name: re-raise the error
        fail:
          msg: "{{ ansible_failed_result }}"
        when: ansible_failed_result is defined