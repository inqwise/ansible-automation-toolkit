name: goldenimage Workflow
on:
  workflow_call:
    inputs:
      S3_BASE_PATH:
        required: true
        type: string
      ROLE:
        required: true
        type: string
      REGION:
        required: true
        type: string
      CPU_ARCH:
        required: true
        type: string
      OS:
        required: true
        type: string
      APP:
        required: true
        type: string
      TOOLKIT_VERSION:
        required: true
        type: string

permissions:
  id-token: write   # Required for requesting the JWT
  contents: read    # Required for actions/checkout

jobs:
  Golden-Image:
    runs-on: ubuntu-latest
    continue-on-error: false
    env:
      IS_TEST: ${{ github.ref == 'refs/heads/test-workflow' }}
      TAG_NAME: ${{ github.ref_name }}
      REPO_NAME: ${{ github.event.repository.name }}
    
    steps:
      - name: Determine Tag
        if: ${{ github.ref_type == 'tag' || env.IS_TEST }}
        run: "echo Triggered by tag: ${{ github.ref_name }}"

      - name: Set S3_PATH Environment Variable
        run: | 
          echo "S3_PATH=${{ inputs.S3_BASE_PATH }}/${{ env.REPO_NAME }}/${{ env.TAG_NAME }}" >> $GITHUB_ENV

      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.ROLE }}
          aws-region: ${{ inputs.REGION }}

      - name: Install Packages
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli packer    

      - name: Delete existing files from S3
        if: ${{ env.TAG_NAME != '' }}
        run: |
          echo "Deleting files from ${{ env.S3_PATH }}/"
          aws s3 rm ${{ env.S3_PATH }}/ --recursive

      - name: Upload files to S3
        run: |
          echo "Uploading files to ${{ env.S3_PATH }}/"
          aws s3 cp . ${{ env.S3_PATH }}/ --recursive --exclude ".*" --exclude ".*/**" --exclude "Vagrantfile*"

      - name: Install Packer Plugin for Amazon
        run: |
          curl -O https://raw.githubusercontent.com/inqwise/ansible-automation-toolkit/${{ inputs.TOOLKIT_VERSION }}/packer/goldenimage.pkr.hcl
          packer init .

      - name: Execute Packer Build
        run: |
          packer build --only=amazon-ebs.${{ inputs.OS }}_${{ inputs.CPU_ARCH }} -var cpu_arch=${{ inputs.CPU_ARCH }} -var 'tag=${{ env.TAG_NAME }}' -var app=${{ inputs.APP }} -var 'aws_region=${{ inputs.REGION }}' -var 'verbose=${{ env.IS_TEST }}' goldenimage.pkr.hcl